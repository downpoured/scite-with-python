 
Summary of the steps taken from SciTE mainline to SciTE with python.

Moved properties and doc to a subdirectory,
	changed SciTE source to look for properties/SciTEGlobal.properties instead of SciTEGlobal.properties

Combine some uncommonly used properties files into one file (others.properties)
	move the ones to combine into one directory
	cd to that directory. ensure unix tools are in the path.
	tail -n +1 * > ../others.properties
	open ../others.properties and replace "==> " with "## ==> "
	move contents of css.properties into html.properties
	change all command.name.1.tool to command.name.9.tool, to not interfere with our Ctrl+1 shortcut
	
Generate table of SciTE commands
	run scite/src/scripts/PythonExtensionGenTable.py
	if "NOTSEENBEFORE" is in the output, add an entry to currentNames and run again.
	paste the output into scite/scite/src/PythonExtension.cxx, into the table "static IFaceConstant rgFriendlyNamedIDMConstants[]"
	run scite/src/scripts/PythonExtensionGenReference.py to rebuild documentation.

Trim languages menu
	Comment out these properties lines
	*language.vb=&VB|vb||
	*language.css=CSS|css||
	*language.ada=Ada|ads||
	*language.batch=&Batch|bat||
	*language.difference=&Difference|diff||
	*language.errorlist=&Errorlist|err||
	*language.properties=&Properties|properties||
	*language.fortran=&Fortran|f90||
	*language.pascal=Pascal|pas||
	*language.matlab=Matlab|m.matlab||
	*language.tcl=&TCL|tcl||
	*language.d=D|d||
	*language.yaml=YAML|yaml||
	*language.tex=TeX|tex||
	*language.php=P&HP|php||
	*language.perl=Pe&rl|pl||
	*language.sql=S&QL|sql||
	*language.lua=Lu&a|lua||
	*language.java=&Java|java||
	*language.csharp=C&#|cs||
	*language.ruby=Ruby|rb||
	*language.rust=Rust|rs||
	*language.lisp=Lisp|lisp||
	Hypertext to *language.html=H&TML|html|$(keyHTML)|

------------------------------------------------------------------
Modifications to SciTE source code include
	Removing C++11 =delete; in order to compile
	Adding Python extension.
		Python and lua can coexist because Python defers messages that do not begin with 'py:'
		Removing lua extension in this build, though, since the python extension is sufficient
	
	New feature: scite/bin is cleaner because properties are in their own directory
	New feature: user can limit number of menuitems shown for properties files (menu.limitpropertiesmenuitems)
	New feature: warn if the max number of buffers has been opened. (buffers.warn.limitreached)
	New feature: tools can be hidden from context menu. (context.menu.show.tools)
	New feature: internal grep supports regex search (find.in.files.enable.regexp), UI only updated for Windows (2 commits)
	New feature: expose SciTEWindowID property for plugins to communicate with SciTE
	New feature: user.shortcuts supports SCI_ constants
	New feature: on Windows, user can hide specified menu items via properties files (menu.hidemenuitems)
	New feature: on Windows, moved Tools to a submenu
	New feature: on Windows, increased number of slots for mru items
	New feature: on Windows, for text in the parameters dialog, property is set right when dialog is deactivated (i.e. property is updated faster, no need to click Set).
	New feature: menukey customization now supported on windows, was previously gtk-only. (3 commits)
	New feature: "Find" and "Find in Files" can be configured to not have shared state for settings like case sensitivity (find.in.files.settings.shared.state)
	New feature: if parameters are set from the dialog, they can be automatically added to every Go command. (command.go.use.parameters.from.dialog)
	New feature: commands that run in immediate mode can allow the keyboard event to continue to propagate.
	New feature: current search term and find state can be shared among all SciTE processes. (save.find.across.instances)
	New feature: new "CurrentPaneNumber" property is automatically set like "CurrentWord"
	user strip on Windows, focus in/out events are sent for combo boxes.
	user strip on Windows, cursor does not flicker in an edit box.
	Fix minor issue when parsing command.mode strings from properties.


