

*customcommandsregister.switch_to_header=switch_to_header|
customcommand.switch_to_header.name=Switch to header
customcommand.switch_to_header.shortcut=Ctrl+Alt+H
customcommand.switch_to_header.action.py=ThisModule().SwitchToHeader()
customcommand.switch_to_header.path=tools_internal/tools_switch_to_header

*customcommandsregister.switch_to_corresponding_dir=switch_to_corresponding_dir|
customcommand.switch_to_corresponding_dir.name=Switch to corresponding dir
customcommand.switch_to_corresponding_dir.shortcut=
customcommand.switch_to_corresponding_dir.action.py=ThisModule().SwitchToCorrespondingDir()
customcommand.switch_to_corresponding_dir.path=tools_internal/tools_switch_to_header


# Sometimes you'll have two copies of a codebase in separate directories.
# The "switch_to_corresponding_dir" plugin lets you quickly switch from one directory's version of a file to another.
# for example, there are two files, c:\example\working\foo\bar\code.cpp and c:\example\master\foo\bar\code.cpp.
# if you set up a mapping c:\example\working|c:\example\master in the list defined by 
#                           customcommand.switch_to_corresponding_dir.directorymappings,
# you can open the file c:\example\working\foo\bar\code.cpp
# run the "switch_to_corresponding_dir" plugin,
# and then the plugin opens the corresponding file, c:\example\master\foo\bar\code.cpp.

customcommand.switch_to_corresponding_dir.directorymappings=\
||c:\example\working|c:\example\master\
||c:\other_example\working|c:\other_example\master\

