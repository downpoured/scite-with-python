
# New Features added in SciTE-with-Python

![Screenshot of new tools](https://downpoured.github.io/scite-with-python/latest/newtools.png)

UI for the new Find In Filenames tool:

![Screenshot of new tools](https://downpoured.github.io/scite-with-python/latest/searchfilenames.png)

Also, Find In Files now supports regexp on Windows even when grep is not available:

![Screenshot of new tools](https://downpoured.github.io/scite-with-python/latest/findinfilesregex.png)

# Useful SciTE Features

* Press Ctrl+Tab to move to the next tab

* Press Ctrl+Q to comment-out the current line

* Press Ctrl+F2 to add a bookmark on the current line, press F2 to navigate to the next bookmark

* Press Ctrl+F3 to move to the next occurrence of the selected text

* Hold Alt and click/drag to create a rectangular selection. Also, typing when there is a rectangular selection will enter text into several lines at once

* Press F5 to run the current script

    ![Screenshot of run-script](https://downpoured.github.io/scite-with-python/latest/runscript.png)

# Details for features added in SciTE-with-Python

* Commonly opened files

    * Running this tool will show a message listing the following features:

    ![commonly opened](https://downpoured.github.io/scite-with-python/latest/features_commonopen.png)

* Word count/sum...

    * Running this tool will show a message listing the following features:

    ![stats](https://downpoured.github.io/scite-with-python/latest/features_stats.png)
    
* Change lines...

    * Running this tool will show a message listing the following features:

    ![change lines](https://downpoured.github.io/scite-with-python/latest/features_lines.png)
    
    * Natural sort order means that 2 will sort before 10, and so on.

* Coding reference...

    * Running this tool will show a message listing the following features:

    ![coding reference](https://downpoured.github.io/scite-with-python/latest/features_codereference.png)

* Search for selected word

    * Search for selected word (declaration) -- looks for the symbol's declaration, typically in a .h header

    * Search for selected word (definition) -- looks for the symbol's implementation, supports .c, .cpp, .py
    
    * All references -- looks for all occurrences of selected word, even in strings or comments
        
    * When a search is run, if there is a file named SciTE.properties in the same directory as the current file, we'll read this file and look for a line like `customcommand.code_search_c_declaration.directory_depth=2`. The number 2 tells SciTE to search files in the current directory, its parent, and its grandparent.


* Autocompletion

    * Automatically closes xml tags, html tags, parentheses, and quotes
    
    * Can be disabled in properties with a line like `auto.close.quotes=1`

* Print local variables upon exception

    * In a Python script, press Ctrl+F7 to run the script, and if an unhandled exception occurs, the values of local variables will be shown (based on ActiveState recipe 52215)
    
    * Add a line that contains only the text DEBUG to add a breakpoint
    
    * Also, select an expression and type Ctrl+Shift+Y to add a print statement

* Switch to file in corresponding folder

    * Sometimes you'll have two copies of a codebase in separate directories. This plugin lets you quickly switch from one directory's version of a file to another
    
    * For example, there are two files, `/home/example/branch1/foo/bar/code.cpp` and `/home/example/branch2/foo/bar/code.cpp`
    
    * Press Ctrl+Shift+; to open user.properties and add the line

    ```
    customcommand.switch_to_corresponding_dir.directorymappings=\
    ||/home/example/branch1|/home/example/branch2
    ```

    * Now when editing `/home/example/branch1/foo/bar/code.cpp`, Ctrl+Shift+F10 will open the corresponding file

* Designate "disabled directories"

    * Sometimes you might want to remind yourself that certain files shouldn't usually be edited. When you open a file in a disabled directory, the background will be bright red, as a visual indicator to be careful.
    
    * To add a disabled directory, add something like this to your properties file
    
    ```
    customcommand.disable_directory.disabled_directories=\
    |/home/example/disableddir1\
    |/home/example/disableddir2\
    ```

* Insert sequence
        
    Let's say you want to write the sequence

    ```
    data1 = getData1();
    data2 = getData2();
    data3 = getData3();
    ```
    
    First, write
    
    ```
    data@ = getData@();
    data@ = getData@();
    data@ = getData@();
    ```
    
    Then select the text and press Ctrl+I, 0 to run Insert Sequential Numbers
    
    Let's say you want to write the sequence
    
    ```
    dataRed = getDataRed();
    dataGreen = getDataGreen();
    dataBlue = getDataBlue();
    ```
    
    First, write
    
    ```
    data@Red@ = getData@@();
    data@Green@ = getData@@();
    data@Blue@ = getData@@();
    ```

    Then select the text and press Ctrl+I, 0 to run Insert Sequential Numbers

